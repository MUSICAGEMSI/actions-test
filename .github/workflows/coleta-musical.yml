name: Coleta Musical - Real-time Output

on:
  workflow_dispatch:  # Permite rodar manualmente
  schedule:
    - cron: '0 3 * * *'  # 3 AM UTC todos os dias (opcional)

env:
  PYTHONUNBUFFERED: 1  # CR√çTICO: for√ßa output unbuffered

jobs:
  coletar:
    runs-on: ubuntu-latest
    timeout-minutes: 45  # Timeout global do job
    
    steps:
      - name: Checkout c√≥digo
        uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Instalar depend√™ncias
        run: |
          echo "üì¶ Instalando depend√™ncias..."
          pip install --upgrade pip
          pip install httpx playwright tqdm requests
          echo "‚úì Depend√™ncias instaladas"
      
      - name: Instalar Playwright e navegadores
        run: |
          echo "üé≠ Instalando Playwright..."
          playwright install chromium
          playwright install-deps chromium
          echo "‚úì Playwright configurado"
      
      - name: Verificar configura√ß√£o
        run: |
          echo "üîç Verificando ambiente..."
          python --version
          pip list | grep -E "httpx|playwright|tqdm"
          echo "‚úì Ambiente OK"
      
      - name: Executar coleta com output real-time
        timeout-minutes: 40  # Timeout espec√≠fico do step
        env:
          LOGIN_MUSICAL: ${{ secrets.LOGIN_MUSICAL }}
          SENHA_MUSICAL: ${{ secrets.SENHA_MUSICAL }}
        run: |
          echo "üöÄ Iniciando coleta..."
          echo "================================"
          
          # IMPORTANTE: stdbuf garante output em tempo real
          stdbuf -oL -eL python coletor_realtime_output.py 2>&1 | while IFS= read -r line; do
            echo "$line"
          done
          
          exit_code=${PIPESTATUS[0]}
          
          if [ $exit_code -eq 0 ]; then
            echo "================================"
            echo "‚úÖ Coleta finalizada com sucesso!"
          else
            echo "================================"
            echo "‚ùå Coleta falhou com c√≥digo: $exit_code"
            exit $exit_code
          fi
      
      - name: Upload logs em caso de falha
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: logs-coleta-${{ github.run_number }}
          path: |
            coletor_debug.log
            checkpoint_coleta.json
          retention-days: 7
      
      - name: Upload checkpoint (sempre)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: checkpoint-${{ github.run_number }}
          path: checkpoint_coleta.json
          retention-days: 3
      
      - name: Relat√≥rio final
        if: always()
        run: |
          echo "üìä Informa√ß√µes da execu√ß√£o:"
          echo "  - Run number: ${{ github.run_number }}"
          echo "  - Timestamp: $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
          
          if [ -f "checkpoint_coleta.json" ]; then
            echo "  - Checkpoint dispon√≠vel: ‚úì"
          else
            echo "  - Checkpoint dispon√≠vel: ‚úó"
          fi
